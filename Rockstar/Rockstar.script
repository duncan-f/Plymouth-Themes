#▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█░▄▀ ▒█▀▀▀█ ▀▀█▀▀ ░█▀▀█ ▒█▀▀█ 　 ░░ 　 ▒█▀▀█ ▒█░░░ ▒█░░▒█ ▒█▀▄▀█ ▒█▀▀▀█ ▒█░▒█ ▀▀█▀▀ ▒█░▒█
#▒█▄▄▀ ▒█░░▒█ ▒█░░░ ▒█▀▄░ ░▀▀▀▄▄ ░▒█░░ ▒█▄▄█ ▒█▄▄▀ 　 ▀▀ 　 ▒█▄▄█ ▒█░░░ ▒█▄▄▄█ ▒█▒█▒█ ▒█░░▒█ ▒█░▒█ ░▒█░░ ▒█▀▀█
#▒█░▒█ ▒█▄▄▄█ ▒█▄▄█ ▒█░▒█ ▒█▄▄▄█ ░▒█░░ ▒█░▒█ ▒█░▒█ 　 ░░ 　 ▒█░░░ ▒█▄▄█ ░░▒█░░ ▒█░░▒█ ▒█▄▄▄█ ░▀▄▄▀ ░▒█░░ ▒█░▒█

# Made By:- Vivek Rajan
# Don't forget to follow on github:- https://github.com/MrVivekRajan

screen_width = Window.GetWidth(0);
screen_height = Window.GetHeight(0);
screen_half_width = Window.GetWidth(0) / 2;
screen_half_height = Window.GetHeight(0) / 2;

state.status = "normal";
state.time = 0.0;

//------------------------------- (Image Animation) ------------------------------//

for (i = 0; i < 62; i++)
  flyingman_image[i] = Image("progress-" + i + ".png");
flyingman_sprite = Sprite();

//------------------------------- (Image Position) ------------------------------//

flyingman_sprite.SetX(Window.GetX() + (Window.GetWidth(0) / 2 - flyingman_image[0].GetWidth() / 2)); # Place images in the center
flyingman_sprite.SetY(Window.GetY() + (Window.GetHeight(0) / 2 - flyingman_image[0].GetHeight() / 2));

progress = 0;

//------------------------------ (Image Refresh-Rate) ------------------------------//

fun refresh_callback ()
{
    flyingman_sprite.SetImage(flyingman_image[Math.Int(progress / 2) % 62]);
    progress++;

    capslock_state = Plymouth.GetCapslockState();
    if (global.dialog) {
        if(capslock_state)
            global.dialog.capslock.sprite.SetOpacity(1);
        else
            global.dialog.capslock.sprite.SetOpacity(0);
    }
}

Plymouth.SetRefreshFunction (refresh_callback);

//------------------------------ (Password Field Setup) ------------------------------//

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    local.capslock;

    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    capslock.image = Image("capslock.png");

    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth() / 2 - box.image.GetWidth () / 2;
    box.y = Window.GetHeight() * 7 / 8 - box.image.GetHeight() / 2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);

    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);

    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);

    capslock.sprite = Sprite(capslock.image);
    capslock.x = entry.x + entry.image.GetWidth() - capslock.image.GetWidth() - 8;
    capslock.y = entry.y + (entry.image.GetHeight() - capslock.image.GetHeight()) / 2;
    capslock.z = entry.z;
    capslock.sprite.SetPosition(capslock.x, capslock.y, capslock.z);
    capslock.sprite.SetOpacity(0);

    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.capslock = capslock;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }

fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);

    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }


fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
        dialog_setup();
    else
        dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
// Set up the password prompt
Plymouth.SetDisplayPasswordFunction(display_password_callback);
